name: Build driver
on:
  push:
    branches: [ main, rubik-pi-image ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  script: "./install_rubikpi3.sh"
  base_image: "https://people.canonical.com/~platform/images/qualcomm-iot/rubikpi3/ubuntu-server-24.04/x00/ubuntu-24.04-preinstalled-server-arm64+rubikpi3-20250912-127.yaml"

jobs:
  build:
    runs-on: ubuntu-latest  
                        
    name: "Build for RubikPi3"

    steps:
    - uses: actions/checkout@v4.1.7
      with:
        fetch-depth: 0
    - name: Fetch tags
      run: git fetch --tags --force

    - name: Build rubikpi3 with mounting
      run: |
        chmod +x ./mount_rubikpi3.sh
        ./mount_rubikpi3.sh ${{ github.ref_name }} "$base_image" "$script"
      id: install_deps_rubikpi3

    - uses: actions/upload-artifact@v4.3.4
      with:
        name: photonvision_rubikpi3_full.tar.gz
        path: photonvision_rubikpi3_full.tar.gz
        if-no-files-found: error
        retention-days: 1

  release:
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      # Download literally every single artifact
      - uses: actions/download-artifact@v4.1.8
      - run: find
      # Push to dev release
      - uses: pyTooling/Actions/releaser@v1.0.5
        if: github.event_name == 'push'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'Dev'
          rm: true
          files: |
            **/*.tar.gz
      # Upload all tar.gz archives to GH tag if tagged
      - uses: softprops/action-gh-release@v2.0.8
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            **/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
