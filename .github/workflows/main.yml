name: Build driver
on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: limelight
            script: ./install_limelight.sh
            base_image: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          - name: limelight3
            script: ./install_limelight3.sh
            base_image: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          - name: limelight3g
            script: ./install_limelight3g.sh
            base_image: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          - name: raspi
            script: ./install_pi.sh
            base_image: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          - name: raspi_dev
            script: ./install_dev_pi.sh
            base_image: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          - name: snakeyes
            script: ./install_snakeyes.sh
            base_image: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          - name: opi5
            script: ./install_opi5.sh
            base_image: https://github.com/Joshua-Riek/ubuntu-rockchip/releases/download/v2.4.0/ubuntu-24.04-preinstalled-server-arm64-orangepi-5.img.xz
          - name: opi5b
            script: ./install_opi5.sh
            base_image: https://github.com/Joshua-Riek/ubuntu-rockchip/releases/download/v2.4.0/ubuntu-24.04-preinstalled-server-arm64-orangepi-5b.img.xz
          - name: opi5plus
            script: ./install_opi5.sh
            base_image: https://github.com/Joshua-Riek/ubuntu-rockchip/releases/download/v2.4.0/ubuntu-24.04-preinstalled-server-arm64-orangepi-5-plus.img.xz
          - name: opi5pro
            script: ./install_opi5.sh
            base_image: https://github.com/Joshua-Riek/ubuntu-rockchip/releases/download/v2.4.0/ubuntu-24.04-preinstalled-server-arm64-orangepi-5-pro.img.xz
          - name: opi5max
            script: ./install_opi5.sh
            base_image: https://github.com/Joshua-Riek/ubuntu-rockchip/releases/download/v2.4.0/ubuntu-24.04-preinstalled-server-arm64-orangepi-5-max.img.xz
          - name: rock5c
            script: ./install_opi5.sh
            base_image: https://github.com/Joshua-Riek/ubuntu-rockchip/releases/download/v2.4.0/ubuntu-24.04-preinstalled-server-arm64-rock-5c.img.xz
          - name: rubikpi3
            script: ./install_rubikpi3.sh
            base_image: https://testisdfasdfasdf.s3.us-east-2.amazonaws.com/ubuntu-24.04-preinstalled-desktop-arm64-rubikpi3.img.xz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIARLLP4B4AUVVCFY5B%2F20250730%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Date=20250730T211720Z&X-Amz-Expires=300&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLWVhc3QtMiJHMEUCIAlcC%2BPnOnPrdr6tjn4n7gcOrf4JHJaKNIAXWbCxrgOVAiEA2xMXXU8Jpnkog%2FeE%2Bry5s%2B5ggHnQCzwy%2FT6Nk1oyv8Aq5AIIxv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAAGgwwOTMxMTMyOTA0OTciDAFdlDDwF0ifliwuYiq4AvQaUa5PBrqy4sn92ZJGcqolC421D1t4CsxigMHdgoScxunYpz29tOY2cYLbl%2FLvV3f6ASJNAtO9doVjMZKywCi2slM01vNjJYFWa6YJ%2B8%2B%2FEMECR91GxUpGOzTRS5dVPXNEwG5muX5Tp2UnHQjqezUiCW3i0AMB3qcTpaP%2FUy%2FbJR3c0K7jBZAcdffXVQG6EmxW0Jj4Gro6jSBBPPCu2%2FHPDAEd1s5c4LFCg9e0AZAi85JxSHNDgnQcMGWa3%2FW8xIWlX56QgDkUKuCFOLzfNuKTPqYsQfMe%2FcaHOBIyLdWYZAiXy%2B2f28GNzpWEYhetDwX4FZ8F2sxgSfcwlvy51UIBCi9THnvHflEeFG45FM5acdut4Bx%2FAHTKzaJJ8jpldIRkm9fbfstMHMDK4J%2FQWqYc3wNUlJgkZDCUiqnEBjqtAvw6Bz2ZLFmDaPvx%2BGJASjX9VPtoljaU8XYfHJMlAGxvEsfgFk67MMIkxKH5s6D%2BTmy4owOAV%2BsfD9nWeiiZH6s2Ak40hAkTMgVtqicmqwLw4XCaoGX7wTu%2B85vR%2BETZx1qaMXtjZJjVOy%2FX3KbHSRmLBrr%2FH%2FrOt0%2Fzpkutm2qbvn6%2FmtX8do9B76woRdUC56ZT1OTwZhQfTv9O9weRDoChaT1Ec2pPhxZOOLFEYr7XCGmlLsG746yf7CuLY7AMFwsHCopvugqq6KG93GXksVnjusSHW2C08KpI20zUvgTdbGov%2BVqQ0e%2BsyxLe%2BdELDDEyBF%2BPNVXRBtq9B52OQg8RXeOoYj98%2BHSBPOV4hptFd3YP40tCslVj7AxcbX1vxpR8dao9Hg9cN44Hp%2Bw%3D&X-Amz-Signature=3c68fe657ec85dd916d2b5769a97b37593df4f20f5bc265b65406e387b36b9c7&X-Amz-SignedHeaders=host&response-content-disposition=attachment
            
    name: "Build for ${{ matrix.name }}"

    steps:
    - uses: actions/checkout@v4.1.7
      with:
        fetch-depth: 0
    - name: Fetch tags
      run: git fetch --tags --force

    - name: Pre-process rubikpi3 image if needed
      if: matrix.name == 'rubikpi3'
      run: |
        echo "Downloading and extracting rubikpi3 .tgz file..."
        wget -O rubikpi3.tgz "${{ matrix.base_image }}"
        tar -xzf rubikpi3.tgz
        # Find the .img.xz file in the extracted contents
        IMG_FILE=$(find . -name "*.img.xz" | head -1)
        if [ -n "$IMG_FILE" ]; then
          mv "$IMG_FILE" rubikpi3.img.xz
          echo "Extracted image: rubikpi3.img.xz"
        else
          echo "Error: No .img.xz file found in the archive"
          exit 1
        fi

    - uses: pguyot/arm-runner-action@v2.6.5
      id: install_deps
      with:
        image_additional_mb: 1500
        bind_mount_repository: true
        base_image: ${{ matrix.name == 'rubikpi3' && format('file://{0}/rubikpi3.img.xz', github.workspace) || matrix.base_image }}
        commands: |
          chmod +x ${{matrix.script}}
          ${{ matrix.script }}
          chmod +x ./install_common.sh
          ./install_common.sh
          mkdir -p /opt/photonvision/
          echo "${{ github.ref_name }};${{ matrix.name }}" > /opt/photonvision/image-version

    - name: Compress built image
      run: |
        mv ${{ steps.install_deps.outputs.image }} photonvision_${{ matrix.name }}.img
        sudo xz -T 0 -v photonvision_${{ matrix.name }}.img

    - uses: actions/upload-artifact@v4.3.4
      with:
        name: photonvision_${{ matrix.name }}.img.xz
        path: photonvision_${{ matrix.name }}.img.xz
        if-no-files-found: error
        retention-days: 1

  release:
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      # Download literally every single artifact
      - uses: actions/download-artifact@v4.1.8
      - run: find
      # Push to dev release
      - uses: pyTooling/Actions/releaser@v1.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'Dev'
          rm: true
          files: |
            **/*.xz
        if: github.event_name == 'push'
      # Upload all xz archives to GH tag if tagged
      - uses: softprops/action-gh-release@v2.0.8
        with:
          files: |
            **/*opi5*.xz
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: softprops/action-gh-release@v2.0.8
        with:
          files: |
            **/!(*opi5*).xz
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
